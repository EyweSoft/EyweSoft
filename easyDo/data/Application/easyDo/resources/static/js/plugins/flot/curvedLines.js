!function(i){var n={series:{curvedLines:{active:!1,apply:!1,fit:!1,curvePointFactor:20,fitPointDist:void 0}}};jQuery.plot.plugins.push({init:function(i){function n(i,n,e){var t=e.points.length/e.pointsize;if(1==n.curvedLines.apply&&void 0===n.originSeries&&t>1.5)if(n.lines.fill){var s=r(e,n.curvedLines,1),o=r(e,n.curvedLines,2);e.pointsize=3,e.points=[];for(var p=0,a=0,v=0;v<s.length||p<o.length;)s[v]==o[p]?(e.points[a]=s[v],e.points[a+1]=s[v+1],e.points[a+2]=o[p+1],p+=2,v+=2):s[v]<o[p]?(e.points[a]=s[v],e.points[a+1]=s[v+1],e.points[a+2]=a>0?e.points[a-1]:null,v+=2):(e.points[a]=o[p],e.points[a+1]=a>1?e.points[a-2]:null,e.points[a+2]=o[p+1],p+=2),a+=3}else n.lines.lineWidth>0&&(e.points=r(e,n.curvedLines,1),e.pointsize=2)}function r(i,n,r){var e=i.points,t=i.pointsize,s=n.curvePointFactor*(e.length/t),o=new Array,p=new Array,a=-1,v=-1,u=0;if(n.fit){var f;if(void 0===n.fitPointDist){var l=e[0];f=(e[e.length-t]-l)/5e4}else f=n.fitPointDist;for(var c=0;c<e.length;c+=t){var h,d;v=c+r,h=e[a=c]-f,d=e[a]+f;for(var g=2;h==e[a]||d==e[a];)h=e[a]-f*g,d=e[a]+f*g,g++;o[u]=h,p[u]=e[v],o[++u]=e[a],p[u]=e[v],o[++u]=d,p[u]=e[v],u++}}else for(c=0;c<e.length;c+=t)a=c,v=c+r,o[u]=e[a],p[u]=e[v],u++;var y=o.length,w=new Array,A=new Array;w[0]=0,w[y-1]=0,A[0]=0;for(c=1;c<y-1;++c){var L=o[c+1]-o[c-1];if(0==L)return[];var P=(o[c]-o[c-1])/L,z=P*w[c-1]+2;w[c]=(P-1)/z,A[c]=(p[c+1]-p[c])/(o[c+1]-o[c])-(p[c]-p[c-1])/(o[c]-o[c-1]),A[c]=(6*A[c]/(o[c+1]-o[c-1])-P*A[c-1])/z}for(u=y-2;u>=0;--u)w[u]=w[u]*w[u+1]+A[u];var D=(o[y-1]-o[0])/(s-1),k=new Array,F=new Array,j=new Array;for(k[0]=o[0],F[0]=p[0],j.push(k[0]),j.push(F[0]),u=1;u<s;++u){k[u]=k[0]+u*D;for(var m=y-1,M=0;m-M>1;){var O=Math.round((m+M)/2);o[O]>k[u]?m=O:M=O}var Q=o[m]-o[M];if(0==Q)return[];var S=(o[m]-k[u])/Q,W=(k[u]-o[M])/Q;F[u]=S*p[M]+W*p[m]+((S*S*S-S)*w[M]+(W*W*W-W)*w[m])*(Q*Q)/6,j.push(k[u]),j.push(F[u])}return j}i.hooks.processOptions.push((function(i,r){r.series.curvedLines.active&&i.hooks.processDatapoints.unshift(n)}))},options:n,name:"curvedLines",version:"0.5"})}();